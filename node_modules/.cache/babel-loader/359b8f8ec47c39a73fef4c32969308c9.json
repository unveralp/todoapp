{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Web Development\\\\mytodolist\\\\src\\\\components\\\\List.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List(_ref) {\n  let {\n    missions,\n    setMissions,\n    checkedState,\n    setCheckedState,\n    hide\n  } = _ref;\n  const checkHandler = id => {\n    const updatedCheckedState = checkedState.map((state, index) => index === id ? !state : state);\n    setCheckedState(updatedCheckedState);\n  };\n  function submitDelete(id) {\n    setMissions(prevTasks => {\n      return prevTasks.filter((item, index) => {\n        return index !== id;\n      });\n    });\n    setCheckedState(prevChecks => {\n      return prevChecks.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n  const isCompleted = index => {\n    if (checkedState[index] === true && hide === \"All\") {\n      return \"completed\";\n    } else if (checkedState[index] === true && hide === \"Active\") {\n      return \"completed hidden\";\n    } else if (checkedState[index] === false && hide === \"Completed\") {\n      return \"hidden\";\n    } else if (checkedState[index] === true && hide === \"Completed\") {\n      return \"completed\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"toggle-all\",\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"toggle-all\",\n      children: \"Mark all as complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: missions.map((mission, index) =>\n      /*#__PURE__*/\n      //checkedState[index] ? \"completed\" : \"completed hidden\"\n      _jsxDEV(\"li\", {\n        className: isCompleted(index),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"toggle\",\n            type: \"checkbox\",\n            onChange: () => checkHandler(index),\n            value: mission[index],\n            id: index,\n            checked: checkedState[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: mission\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"destroy\",\n            onClick: event => submitDelete(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["List","missions","setMissions","checkedState","setCheckedState","hide","checkHandler","id","updatedCheckedState","map","state","index","submitDelete","prevTasks","filter","item","prevChecks","isCompleted","mission","event"],"sources":["C:/Users/HP/Web Development/mytodolist/src/components/List.js"],"sourcesContent":["\r\nfunction List({missions,setMissions,checkedState,setCheckedState,hide}){\r\n\r\n  const checkHandler = (id) => {\r\n    const updatedCheckedState=checkedState.map((state,index) => index === id ? !state : state );\r\n    setCheckedState(updatedCheckedState);\r\n  }\r\n\r\n  function submitDelete(id){\r\n    setMissions(prevTasks => {\r\n      return prevTasks.filter((item,index) => {\r\n        return index !== id\r\n      });\r\n    });\r\n    setCheckedState(prevChecks => {\r\n\r\n      return prevChecks.filter((item,index) => {\r\n        return index !==id\r\n      })\r\n    });\r\n  }\r\n\r\n  const isCompleted = (index) => {\r\n    if (checkedState[index] === true && hide === \"All\") {\r\n      return \"completed\";\r\n    } else if (checkedState[index] === true && hide === \"Active\") {\r\n      return \"completed hidden\";\r\n    } else if (checkedState[index] === false && hide === \"Completed\") {\r\n      return \"hidden\";\r\n    }else if(checkedState[index] === true && hide ===\"Completed\"){\r\n      return \"completed\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"main\">\r\n   \t\t<input className=\"toggle-all\" type=\"checkbox\" />\r\n   \t\t<label for=\"toggle-all\">\r\n   \t\t\tMark all as complete\r\n   \t\t</label>\r\n\r\n   \t\t<ul className=\"todo-list\">\r\n       {\r\n         missions.map((mission,index) => (\r\n//checkedState[index] ? \"completed\" : \"completed hidden\"\r\n           <li key={index} className = {isCompleted(index)} >\r\n      \t\t\t\t<div className=\"view\">\r\n      \t\t\t\t\t<input className=\"toggle\" type=\"checkbox\"  onChange={()=> checkHandler(index)} value={mission[index]} id={index} checked={checkedState[index]}/>\r\n      \t\t\t\t\t<label>{mission}</label>\r\n      \t\t\t\t\t<button className=\"destroy\" onClick={(event) => submitDelete(index)}></button>\r\n      \t\t\t\t</div>\r\n      \t\t\t</li>\r\n         ))\r\n       }\r\n\r\n   \t\t</ul>\r\n   \t</section>\r\n  )\r\n}\r\n\r\nexport default List;\r\n"],"mappings":";;AACA,SAASA,IAAI,OAA0D;EAAA,IAAzD;IAACC,QAAQ;IAACC,WAAW;IAACC,YAAY;IAACC,eAAe;IAACC;EAAI,CAAC;EAEpE,MAAMC,YAAY,GAAIC,EAAE,IAAK;IAC3B,MAAMC,mBAAmB,GAACL,YAAY,CAACM,GAAG,CAAC,CAACC,KAAK,EAACC,KAAK,KAAKA,KAAK,KAAKJ,EAAE,GAAG,CAACG,KAAK,GAAGA,KAAK,CAAE;IAC3FN,eAAe,CAACI,mBAAmB,CAAC;EACtC,CAAC;EAED,SAASI,YAAY,CAACL,EAAE,EAAC;IACvBL,WAAW,CAACW,SAAS,IAAI;MACvB,OAAOA,SAAS,CAACC,MAAM,CAAC,CAACC,IAAI,EAACJ,KAAK,KAAK;QACtC,OAAOA,KAAK,KAAKJ,EAAE;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC;IACFH,eAAe,CAACY,UAAU,IAAI;MAE5B,OAAOA,UAAU,CAACF,MAAM,CAAC,CAACC,IAAI,EAACJ,KAAK,KAAK;QACvC,OAAOA,KAAK,KAAIJ,EAAE;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,MAAMU,WAAW,GAAIN,KAAK,IAAK;IAC7B,IAAIR,YAAY,CAACQ,KAAK,CAAC,KAAK,IAAI,IAAIN,IAAI,KAAK,KAAK,EAAE;MAClD,OAAO,WAAW;IACpB,CAAC,MAAM,IAAIF,YAAY,CAACQ,KAAK,CAAC,KAAK,IAAI,IAAIN,IAAI,KAAK,QAAQ,EAAE;MAC5D,OAAO,kBAAkB;IAC3B,CAAC,MAAM,IAAIF,YAAY,CAACQ,KAAK,CAAC,KAAK,KAAK,IAAIN,IAAI,KAAK,WAAW,EAAE;MAChE,OAAO,QAAQ;IACjB,CAAC,MAAK,IAAGF,YAAY,CAACQ,KAAK,CAAC,KAAK,IAAI,IAAIN,IAAI,KAAI,WAAW,EAAC;MAC3D,OAAO,WAAW;IACpB;EACF,CAAC;EAED,oBACE;IAAS,SAAS,EAAC,MAAM;IAAA,wBACxB;MAAO,SAAS,EAAC,YAAY;MAAC,IAAI,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAChD;MAAO,GAAG,EAAC,YAAY;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEf,eAER;MAAI,SAAS,EAAC,WAAW;MAAA,UAErBJ,QAAQ,CAACQ,GAAG,CAAC,CAACS,OAAO,EAACP,KAAK;MAAA;MACpC;MACW;QAAgB,SAAS,EAAIM,WAAW,CAACN,KAAK,CAAE;QAAA,uBACjD;UAAK,SAAS,EAAC,MAAM;UAAA,wBACpB;YAAO,SAAS,EAAC,QAAQ;YAAC,IAAI,EAAC,UAAU;YAAE,QAAQ,EAAE,MAAKL,YAAY,CAACK,KAAK,CAAE;YAAC,KAAK,EAAEO,OAAO,CAACP,KAAK,CAAE;YAAC,EAAE,EAAEA,KAAM;YAAC,OAAO,EAAER,YAAY,CAACQ,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA,QAAE,eAChJ;YAAA,UAAQO;UAAO;YAAA;YAAA;YAAA;UAAA,QAAS,eACxB;YAAQ,SAAS,EAAC,SAAS;YAAC,OAAO,EAAGC,KAAK,IAAKP,YAAY,CAACD,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA,QAAU;QAAA;UAAA;UAAA;UAAA;QAAA;MACzE,GALIA,KAAK;QAAA;QAAA;QAAA;MAAA,QAOf;IAAC;MAAA;MAAA;MAAA;IAAA,QAGD;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEd;AAAC,KAzDQX,IAAI;AA2Db,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}