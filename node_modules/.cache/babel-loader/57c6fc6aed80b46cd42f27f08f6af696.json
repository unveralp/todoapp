{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Web Development\\\\mytodolist\\\\src\\\\components\\\\List.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List(_ref) {\n  _s();\n  let {\n    missions\n  } = _ref;\n  //const [isChecked,setIsChecked] = useState(false);\n  const [checkedState, setCheckedState] = useState(new Array(missions.length).fill(false));\n  const checkHandler = id => {\n    const updatedCheckedState = checkedState.map((state, index) => index === id ? !state : state);\n    setCheckedState(updatedCheckedState);\n  };\n  //  setIsChecked(!isChecked);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"toggle-all\",\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"toggle-all\",\n      children: \"Mark all as complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: missions.map((mission, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: checkedState.map(state => state ? \"completed\" : null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"toggle\",\n            type: \"checkbox\",\n            onChange: () => checkHandler(index),\n            value: mission[index],\n            id: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: mission\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"destroy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(List, \"40iNS3Kdsg+BxIIkk52eTg/Wx78=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useState","List","missions","checkedState","setCheckedState","Array","length","fill","checkHandler","id","updatedCheckedState","map","state","index","mission"],"sources":["C:/Users/HP/Web Development/mytodolist/src/components/List.js"],"sourcesContent":["import {useState} from \"react\";\r\n\r\nfunction List({missions}){\r\n\r\n  //const [isChecked,setIsChecked] = useState(false);\r\n  const [checkedState, setCheckedState] = useState(\r\n    new Array(missions.length).fill(false)\r\n  );\r\n\r\n  const checkHandler = (id) => {\r\n    const updatedCheckedState=checkedState.map((state,index)=> index === id ? !state : state );\r\n    setCheckedState(updatedCheckedState);\r\n  }\r\n//  setIsChecked(!isChecked);\r\n  return (\r\n    <section className=\"main\">\r\n   \t\t<input className=\"toggle-all\" type=\"checkbox\" />\r\n   \t\t<label for=\"toggle-all\">\r\n   \t\t\tMark all as complete\r\n   \t\t</label>\r\n\r\n   \t\t<ul className=\"todo-list\">\r\n       {\r\n         missions.map((mission,index) => (\r\n           <li key={index} className = {\r\n             checkedState.map((state) => (\r\n               state ? \"completed\" : null\r\n             ))\r\n           }>\r\n      \t\t\t\t<div className=\"view\">\r\n      \t\t\t\t\t<input className=\"toggle\" type=\"checkbox\"  onChange={()=> checkHandler(index)} value={mission[index]} id={index}/>\r\n      \t\t\t\t\t<label >{mission}</label>\r\n      \t\t\t\t\t<button className=\"destroy\"></button>\r\n      \t\t\t\t</div>\r\n      \t\t\t</li>\r\n         ))\r\n       }\r\n\r\n   \t\t</ul>\r\n   \t</section>\r\n  )\r\n}\r\n\r\nexport default List;\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAC;AAE/B,SAASC,IAAI,OAAY;EAAA;EAAA,IAAX;IAACC;EAAQ,CAAC;EAEtB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAC9C,IAAIK,KAAK,CAACH,QAAQ,CAACI,MAAM,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CACvC;EAED,MAAMC,YAAY,GAAIC,EAAE,IAAK;IAC3B,MAAMC,mBAAmB,GAACP,YAAY,CAACQ,GAAG,CAAC,CAACC,KAAK,EAACC,KAAK,KAAIA,KAAK,KAAKJ,EAAE,GAAG,CAACG,KAAK,GAAGA,KAAK,CAAE;IAC1FR,eAAe,CAACM,mBAAmB,CAAC;EACtC,CAAC;EACH;EACE,oBACE;IAAS,SAAS,EAAC,MAAM;IAAA,wBACxB;MAAO,SAAS,EAAC,YAAY;MAAC,IAAI,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAChD;MAAO,GAAG,EAAC,YAAY;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEf,eAER;MAAI,SAAS,EAAC,WAAW;MAAA,UAErBR,QAAQ,CAACS,GAAG,CAAC,CAACG,OAAO,EAACD,KAAK,kBACzB;QAAgB,SAAS,EACvBV,YAAY,CAACQ,GAAG,CAAEC,KAAK,IACrBA,KAAK,GAAG,WAAW,GAAG,IACvB,CACF;QAAA,uBACF;UAAK,SAAS,EAAC,MAAM;UAAA,wBACpB;YAAO,SAAS,EAAC,QAAQ;YAAC,IAAI,EAAC,UAAU;YAAE,QAAQ,EAAE,MAAKJ,YAAY,CAACK,KAAK,CAAE;YAAC,KAAK,EAAEC,OAAO,CAACD,KAAK,CAAE;YAAC,EAAE,EAAEA;UAAM;YAAA;YAAA;YAAA;UAAA,QAAE,eAClH;YAAA,UAASC;UAAO;YAAA;YAAA;YAAA;UAAA,QAAS,eACzB;YAAQ,SAAS,EAAC;UAAS;YAAA;YAAA;YAAA;UAAA,QAAU;QAAA;UAAA;UAAA;UAAA;QAAA;MAChC,GATID,KAAK;QAAA;QAAA;QAAA;MAAA,QAWf;IAAC;MAAA;MAAA;MAAA;IAAA,QAGD;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEd;AAAC,GAvCQZ,IAAI;AAAA,KAAJA,IAAI;AAyCb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}